package com.hike.stealth.core;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.Socket;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class HttpConnectionPool {

	private static final Integer NO_OF_THREADS = 100;
	private static final ExecutorService executor = Executors.newFixedThreadPool(NO_OF_THREADS);
	private static final HttpConnectionPool httpConnectionPool = new HttpConnectionPool();
	
	private HttpConnectionPool(){}
	
	public static HttpConnectionPool getInstance(){
		return httpConnectionPool;
	}
	
	public void submitConnection(final Socket socket){
		executor.submit(new Runnable() {
			
			public void run() {
				InputStreamReader isr;
				try {
					isr = new InputStreamReader(socket.getInputStream());

					BufferedReader reader = new BufferedReader(isr); 
					String line = reader.readLine();
					while (!line.isEmpty()) { 
						System.out.println(line); 
						line = reader.readLine(); 
					}

				} catch (IOException e) {
					System.out.println(e);
				}  

			}
		});
	}
}
